// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSubjectVersionsVersionParams creates a new GetSubjectVersionsVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSubjectVersionsVersionParams() *GetSubjectVersionsVersionParams {
	return &GetSubjectVersionsVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSubjectVersionsVersionParamsWithTimeout creates a new GetSubjectVersionsVersionParams object
// with the ability to set a timeout on a request.
func NewGetSubjectVersionsVersionParamsWithTimeout(timeout time.Duration) *GetSubjectVersionsVersionParams {
	return &GetSubjectVersionsVersionParams{
		timeout: timeout,
	}
}

// NewGetSubjectVersionsVersionParamsWithContext creates a new GetSubjectVersionsVersionParams object
// with the ability to set a context for a request.
func NewGetSubjectVersionsVersionParamsWithContext(ctx context.Context) *GetSubjectVersionsVersionParams {
	return &GetSubjectVersionsVersionParams{
		Context: ctx,
	}
}

// NewGetSubjectVersionsVersionParamsWithHTTPClient creates a new GetSubjectVersionsVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSubjectVersionsVersionParamsWithHTTPClient(client *http.Client) *GetSubjectVersionsVersionParams {
	return &GetSubjectVersionsVersionParams{
		HTTPClient: client,
	}
}

/*
GetSubjectVersionsVersionParams contains all the parameters to send to the API endpoint

	for the get subject versions version operation.

	Typically these are written to a http.Request.
*/
type GetSubjectVersionsVersionParams struct {

	// Deleted.
	Deleted *string

	// Subject.
	Subject string

	// Version.
	Version string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get subject versions version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSubjectVersionsVersionParams) WithDefaults() *GetSubjectVersionsVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get subject versions version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSubjectVersionsVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) WithTimeout(timeout time.Duration) *GetSubjectVersionsVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) WithContext(ctx context.Context) *GetSubjectVersionsVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) WithHTTPClient(client *http.Client) *GetSubjectVersionsVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDeleted adds the deleted to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) WithDeleted(deleted *string) *GetSubjectVersionsVersionParams {
	o.SetDeleted(deleted)
	return o
}

// SetDeleted adds the deleted to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) SetDeleted(deleted *string) {
	o.Deleted = deleted
}

// WithSubject adds the subject to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) WithSubject(subject string) *GetSubjectVersionsVersionParams {
	o.SetSubject(subject)
	return o
}

// SetSubject adds the subject to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) SetSubject(subject string) {
	o.Subject = subject
}

// WithVersion adds the version to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) WithVersion(version string) *GetSubjectVersionsVersionParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get subject versions version params
func (o *GetSubjectVersionsVersionParams) SetVersion(version string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetSubjectVersionsVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Deleted != nil {

		// query param deleted
		var qrDeleted string

		if o.Deleted != nil {
			qrDeleted = *o.Deleted
		}
		qDeleted := qrDeleted
		if qDeleted != "" {

			if err := r.SetQueryParam("deleted", qDeleted); err != nil {
				return err
			}
		}
	}

	// path param subject
	if err := r.SetPathParam("subject", o.Subject); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", o.Version); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
