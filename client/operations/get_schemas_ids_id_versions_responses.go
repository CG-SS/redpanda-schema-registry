// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"redpanda-schema-registry/models"
)

// GetSchemasIdsIDVersionsReader is a Reader for the GetSchemasIdsIDVersions structure.
type GetSchemasIdsIDVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchemasIdsIDVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchemasIdsIDVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSchemasIdsIDVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSchemasIdsIDVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /schemas/ids/{id}/versions] get_schemas_ids_id_versions", response, response.Code())
	}
}

// NewGetSchemasIdsIDVersionsOK creates a GetSchemasIdsIDVersionsOK with default headers values
func NewGetSchemasIdsIDVersionsOK() *GetSchemasIdsIDVersionsOK {
	return &GetSchemasIdsIDVersionsOK{}
}

/*
GetSchemasIdsIDVersionsOK describes a response with status code 200, with default header values.

OK
*/
type GetSchemasIdsIDVersionsOK struct {
	Payload []*GetSchemasIdsIDVersionsOKBodyItems0
}

// IsSuccess returns true when this get schemas ids Id versions o k response has a 2xx status code
func (o *GetSchemasIdsIDVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get schemas ids Id versions o k response has a 3xx status code
func (o *GetSchemasIdsIDVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schemas ids Id versions o k response has a 4xx status code
func (o *GetSchemasIdsIDVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schemas ids Id versions o k response has a 5xx status code
func (o *GetSchemasIdsIDVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get schemas ids Id versions o k response a status code equal to that given
func (o *GetSchemasIdsIDVersionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get schemas ids Id versions o k response
func (o *GetSchemasIdsIDVersionsOK) Code() int {
	return 200
}

func (o *GetSchemasIdsIDVersionsOK) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/versions][%d] getSchemasIdsIdVersionsOK  %+v", 200, o.Payload)
}

func (o *GetSchemasIdsIDVersionsOK) String() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/versions][%d] getSchemasIdsIdVersionsOK  %+v", 200, o.Payload)
}

func (o *GetSchemasIdsIDVersionsOK) GetPayload() []*GetSchemasIdsIDVersionsOKBodyItems0 {
	return o.Payload
}

func (o *GetSchemasIdsIDVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemasIdsIDVersionsNotFound creates a GetSchemasIdsIDVersionsNotFound with default headers values
func NewGetSchemasIdsIDVersionsNotFound() *GetSchemasIdsIDVersionsNotFound {
	return &GetSchemasIdsIDVersionsNotFound{}
}

/*
GetSchemasIdsIDVersionsNotFound describes a response with status code 404, with default header values.

Schema not found
*/
type GetSchemasIdsIDVersionsNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get schemas ids Id versions not found response has a 2xx status code
func (o *GetSchemasIdsIDVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schemas ids Id versions not found response has a 3xx status code
func (o *GetSchemasIdsIDVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schemas ids Id versions not found response has a 4xx status code
func (o *GetSchemasIdsIDVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schemas ids Id versions not found response has a 5xx status code
func (o *GetSchemasIdsIDVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get schemas ids Id versions not found response a status code equal to that given
func (o *GetSchemasIdsIDVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get schemas ids Id versions not found response
func (o *GetSchemasIdsIDVersionsNotFound) Code() int {
	return 404
}

func (o *GetSchemasIdsIDVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/versions][%d] getSchemasIdsIdVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetSchemasIdsIDVersionsNotFound) String() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/versions][%d] getSchemasIdsIdVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetSchemasIdsIDVersionsNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSchemasIdsIDVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemasIdsIDVersionsInternalServerError creates a GetSchemasIdsIDVersionsInternalServerError with default headers values
func NewGetSchemasIdsIDVersionsInternalServerError() *GetSchemasIdsIDVersionsInternalServerError {
	return &GetSchemasIdsIDVersionsInternalServerError{}
}

/*
GetSchemasIdsIDVersionsInternalServerError describes a response with status code 500, with default header values.

Internal Server error
*/
type GetSchemasIdsIDVersionsInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get schemas ids Id versions internal server error response has a 2xx status code
func (o *GetSchemasIdsIDVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schemas ids Id versions internal server error response has a 3xx status code
func (o *GetSchemasIdsIDVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schemas ids Id versions internal server error response has a 4xx status code
func (o *GetSchemasIdsIDVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schemas ids Id versions internal server error response has a 5xx status code
func (o *GetSchemasIdsIDVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get schemas ids Id versions internal server error response a status code equal to that given
func (o *GetSchemasIdsIDVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get schemas ids Id versions internal server error response
func (o *GetSchemasIdsIDVersionsInternalServerError) Code() int {
	return 500
}

func (o *GetSchemasIdsIDVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/versions][%d] getSchemasIdsIdVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSchemasIdsIDVersionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/versions][%d] getSchemasIdsIdVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSchemasIdsIDVersionsInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSchemasIdsIDVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetSchemasIdsIDVersionsOKBodyItems0 get schemas ids ID versions o k body items0
swagger:model GetSchemasIdsIDVersionsOKBodyItems0
*/
type GetSchemasIdsIDVersionsOKBodyItems0 struct {

	// subject
	Subject string `json:"subject,omitempty"`

	// version
	Version int64 `json:"version,omitempty"`
}

// Validate validates this get schemas ids ID versions o k body items0
func (o *GetSchemasIdsIDVersionsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get schemas ids ID versions o k body items0 based on context it is used
func (o *GetSchemasIdsIDVersionsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSchemasIdsIDVersionsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSchemasIdsIDVersionsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetSchemasIdsIDVersionsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
