// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/CG-SS/redpanda-schema-registry/models"
)

// GetConfigReader is a Reader for the GetConfig structure.
type GetConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /config] get_config", response, response.Code())
	}
}

// NewGetConfigOK creates a GetConfigOK with default headers values
func NewGetConfigOK() *GetConfigOK {
	return &GetConfigOK{}
}

/*
GetConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetConfigOK struct {
	Payload *GetConfigOKBody
}

// IsSuccess returns true when this get config o k response has a 2xx status code
func (o *GetConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get config o k response has a 3xx status code
func (o *GetConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config o k response has a 4xx status code
func (o *GetConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config o k response has a 5xx status code
func (o *GetConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get config o k response a status code equal to that given
func (o *GetConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get config o k response
func (o *GetConfigOK) Code() int {
	return 200
}

func (o *GetConfigOK) Error() string {
	return fmt.Sprintf("[GET /config][%d] getConfigOK  %+v", 200, o.Payload)
}

func (o *GetConfigOK) String() string {
	return fmt.Sprintf("[GET /config][%d] getConfigOK  %+v", 200, o.Payload)
}

func (o *GetConfigOK) GetPayload() *GetConfigOKBody {
	return o.Payload
}

func (o *GetConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigInternalServerError creates a GetConfigInternalServerError with default headers values
func NewGetConfigInternalServerError() *GetConfigInternalServerError {
	return &GetConfigInternalServerError{}
}

/*
GetConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server error
*/
type GetConfigInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get config internal server error response has a 2xx status code
func (o *GetConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config internal server error response has a 3xx status code
func (o *GetConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config internal server error response has a 4xx status code
func (o *GetConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config internal server error response has a 5xx status code
func (o *GetConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get config internal server error response a status code equal to that given
func (o *GetConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get config internal server error response
func (o *GetConfigInternalServerError) Code() int {
	return 500
}

func (o *GetConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config][%d] getConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigInternalServerError) String() string {
	return fmt.Sprintf("[GET /config][%d] getConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConfigInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetConfigOKBody get config o k body
swagger:model GetConfigOKBody
*/
type GetConfigOKBody struct {

	// compatibility level
	CompatibilityLevel string `json:"compatibilityLevel,omitempty"`
}

// Validate validates this get config o k body
func (o *GetConfigOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get config o k body based on context it is used
func (o *GetConfigOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetConfigOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetConfigOKBody) UnmarshalBinary(b []byte) error {
	var res GetConfigOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
