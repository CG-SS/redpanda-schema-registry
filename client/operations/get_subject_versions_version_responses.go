// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CG-SS/redpanda-schema-registry/models"
)

// GetSubjectVersionsVersionReader is a Reader for the GetSubjectVersionsVersion structure.
type GetSubjectVersionsVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubjectVersionsVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubjectVersionsVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubjectVersionsVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetSubjectVersionsVersionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubjectVersionsVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subjects/{subject}/versions/{version}] get_subject_versions_version", response, response.Code())
	}
}

// NewGetSubjectVersionsVersionOK creates a GetSubjectVersionsVersionOK with default headers values
func NewGetSubjectVersionsVersionOK() *GetSubjectVersionsVersionOK {
	return &GetSubjectVersionsVersionOK{}
}

/*
GetSubjectVersionsVersionOK describes a response with status code 200, with default header values.

OK
*/
type GetSubjectVersionsVersionOK struct {
	Payload *models.SubjectSchema
}

// IsSuccess returns true when this get subject versions version o k response has a 2xx status code
func (o *GetSubjectVersionsVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get subject versions version o k response has a 3xx status code
func (o *GetSubjectVersionsVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version o k response has a 4xx status code
func (o *GetSubjectVersionsVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject versions version o k response has a 5xx status code
func (o *GetSubjectVersionsVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version o k response a status code equal to that given
func (o *GetSubjectVersionsVersionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get subject versions version o k response
func (o *GetSubjectVersionsVersionOK) Code() int {
	return 200
}

func (o *GetSubjectVersionsVersionOK) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionOK  %+v", 200, o.Payload)
}

func (o *GetSubjectVersionsVersionOK) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionOK  %+v", 200, o.Payload)
}

func (o *GetSubjectVersionsVersionOK) GetPayload() *models.SubjectSchema {
	return o.Payload
}

func (o *GetSubjectVersionsVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SubjectSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionNotFound creates a GetSubjectVersionsVersionNotFound with default headers values
func NewGetSubjectVersionsVersionNotFound() *GetSubjectVersionsVersionNotFound {
	return &GetSubjectVersionsVersionNotFound{}
}

/*
GetSubjectVersionsVersionNotFound describes a response with status code 404, with default header values.

Schema not found
*/
type GetSubjectVersionsVersionNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version not found response has a 2xx status code
func (o *GetSubjectVersionsVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version not found response has a 3xx status code
func (o *GetSubjectVersionsVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version not found response has a 4xx status code
func (o *GetSubjectVersionsVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject versions version not found response has a 5xx status code
func (o *GetSubjectVersionsVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version not found response a status code equal to that given
func (o *GetSubjectVersionsVersionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get subject versions version not found response
func (o *GetSubjectVersionsVersionNotFound) Code() int {
	return 404
}

func (o *GetSubjectVersionsVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetSubjectVersionsVersionNotFound) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetSubjectVersionsVersionNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionUnprocessableEntity creates a GetSubjectVersionsVersionUnprocessableEntity with default headers values
func NewGetSubjectVersionsVersionUnprocessableEntity() *GetSubjectVersionsVersionUnprocessableEntity {
	return &GetSubjectVersionsVersionUnprocessableEntity{}
}

/*
GetSubjectVersionsVersionUnprocessableEntity describes a response with status code 422, with default header values.

Invalid version
*/
type GetSubjectVersionsVersionUnprocessableEntity struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version unprocessable entity response has a 2xx status code
func (o *GetSubjectVersionsVersionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version unprocessable entity response has a 3xx status code
func (o *GetSubjectVersionsVersionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version unprocessable entity response has a 4xx status code
func (o *GetSubjectVersionsVersionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject versions version unprocessable entity response has a 5xx status code
func (o *GetSubjectVersionsVersionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version unprocessable entity response a status code equal to that given
func (o *GetSubjectVersionsVersionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get subject versions version unprocessable entity response
func (o *GetSubjectVersionsVersionUnprocessableEntity) Code() int {
	return 422
}

func (o *GetSubjectVersionsVersionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetSubjectVersionsVersionUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetSubjectVersionsVersionUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionInternalServerError creates a GetSubjectVersionsVersionInternalServerError with default headers values
func NewGetSubjectVersionsVersionInternalServerError() *GetSubjectVersionsVersionInternalServerError {
	return &GetSubjectVersionsVersionInternalServerError{}
}

/*
GetSubjectVersionsVersionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSubjectVersionsVersionInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version internal server error response has a 2xx status code
func (o *GetSubjectVersionsVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version internal server error response has a 3xx status code
func (o *GetSubjectVersionsVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version internal server error response has a 4xx status code
func (o *GetSubjectVersionsVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject versions version internal server error response has a 5xx status code
func (o *GetSubjectVersionsVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get subject versions version internal server error response a status code equal to that given
func (o *GetSubjectVersionsVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get subject versions version internal server error response
func (o *GetSubjectVersionsVersionInternalServerError) Code() int {
	return 500
}

func (o *GetSubjectVersionsVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubjectVersionsVersionInternalServerError) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}][%d] getSubjectVersionsVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubjectVersionsVersionInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
