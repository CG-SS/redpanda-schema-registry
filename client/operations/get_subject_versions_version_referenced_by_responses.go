// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CG-SS/redpanda-schema-registry/models"
)

// GetSubjectVersionsVersionReferencedByReader is a Reader for the GetSubjectVersionsVersionReferencedBy structure.
type GetSubjectVersionsVersionReferencedByReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubjectVersionsVersionReferencedByReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubjectVersionsVersionReferencedByOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubjectVersionsVersionReferencedByNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetSubjectVersionsVersionReferencedByUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubjectVersionsVersionReferencedByInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subjects/{subject}/versions/{version}/referencedBy] get_subject_versions_version_referenced_by", response, response.Code())
	}
}

// NewGetSubjectVersionsVersionReferencedByOK creates a GetSubjectVersionsVersionReferencedByOK with default headers values
func NewGetSubjectVersionsVersionReferencedByOK() *GetSubjectVersionsVersionReferencedByOK {
	return &GetSubjectVersionsVersionReferencedByOK{}
}

/*
GetSubjectVersionsVersionReferencedByOK describes a response with status code 200, with default header values.

OK
*/
type GetSubjectVersionsVersionReferencedByOK struct {
	Payload []int64
}

// IsSuccess returns true when this get subject versions version referenced by o k response has a 2xx status code
func (o *GetSubjectVersionsVersionReferencedByOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get subject versions version referenced by o k response has a 3xx status code
func (o *GetSubjectVersionsVersionReferencedByOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version referenced by o k response has a 4xx status code
func (o *GetSubjectVersionsVersionReferencedByOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject versions version referenced by o k response has a 5xx status code
func (o *GetSubjectVersionsVersionReferencedByOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version referenced by o k response a status code equal to that given
func (o *GetSubjectVersionsVersionReferencedByOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get subject versions version referenced by o k response
func (o *GetSubjectVersionsVersionReferencedByOK) Code() int {
	return 200
}

func (o *GetSubjectVersionsVersionReferencedByOK) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByOK  %+v", 200, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByOK) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByOK  %+v", 200, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByOK) GetPayload() []int64 {
	return o.Payload
}

func (o *GetSubjectVersionsVersionReferencedByOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionReferencedByNotFound creates a GetSubjectVersionsVersionReferencedByNotFound with default headers values
func NewGetSubjectVersionsVersionReferencedByNotFound() *GetSubjectVersionsVersionReferencedByNotFound {
	return &GetSubjectVersionsVersionReferencedByNotFound{}
}

/*
GetSubjectVersionsVersionReferencedByNotFound describes a response with status code 404, with default header values.

Schema not found
*/
type GetSubjectVersionsVersionReferencedByNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version referenced by not found response has a 2xx status code
func (o *GetSubjectVersionsVersionReferencedByNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version referenced by not found response has a 3xx status code
func (o *GetSubjectVersionsVersionReferencedByNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version referenced by not found response has a 4xx status code
func (o *GetSubjectVersionsVersionReferencedByNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject versions version referenced by not found response has a 5xx status code
func (o *GetSubjectVersionsVersionReferencedByNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version referenced by not found response a status code equal to that given
func (o *GetSubjectVersionsVersionReferencedByNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get subject versions version referenced by not found response
func (o *GetSubjectVersionsVersionReferencedByNotFound) Code() int {
	return 404
}

func (o *GetSubjectVersionsVersionReferencedByNotFound) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByNotFound  %+v", 404, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByNotFound) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByNotFound  %+v", 404, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionReferencedByNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionReferencedByUnprocessableEntity creates a GetSubjectVersionsVersionReferencedByUnprocessableEntity with default headers values
func NewGetSubjectVersionsVersionReferencedByUnprocessableEntity() *GetSubjectVersionsVersionReferencedByUnprocessableEntity {
	return &GetSubjectVersionsVersionReferencedByUnprocessableEntity{}
}

/*
GetSubjectVersionsVersionReferencedByUnprocessableEntity describes a response with status code 422, with default header values.

Invalid version
*/
type GetSubjectVersionsVersionReferencedByUnprocessableEntity struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version referenced by unprocessable entity response has a 2xx status code
func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version referenced by unprocessable entity response has a 3xx status code
func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version referenced by unprocessable entity response has a 4xx status code
func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject versions version referenced by unprocessable entity response has a 5xx status code
func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version referenced by unprocessable entity response a status code equal to that given
func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get subject versions version referenced by unprocessable entity response
func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) Code() int {
	return 422
}

func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionReferencedByUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionReferencedByInternalServerError creates a GetSubjectVersionsVersionReferencedByInternalServerError with default headers values
func NewGetSubjectVersionsVersionReferencedByInternalServerError() *GetSubjectVersionsVersionReferencedByInternalServerError {
	return &GetSubjectVersionsVersionReferencedByInternalServerError{}
}

/*
GetSubjectVersionsVersionReferencedByInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSubjectVersionsVersionReferencedByInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version referenced by internal server error response has a 2xx status code
func (o *GetSubjectVersionsVersionReferencedByInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version referenced by internal server error response has a 3xx status code
func (o *GetSubjectVersionsVersionReferencedByInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version referenced by internal server error response has a 4xx status code
func (o *GetSubjectVersionsVersionReferencedByInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject versions version referenced by internal server error response has a 5xx status code
func (o *GetSubjectVersionsVersionReferencedByInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get subject versions version referenced by internal server error response a status code equal to that given
func (o *GetSubjectVersionsVersionReferencedByInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get subject versions version referenced by internal server error response
func (o *GetSubjectVersionsVersionReferencedByInternalServerError) Code() int {
	return 500
}

func (o *GetSubjectVersionsVersionReferencedByInternalServerError) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByInternalServerError) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedBy][%d] getSubjectVersionsVersionReferencedByInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubjectVersionsVersionReferencedByInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionReferencedByInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
