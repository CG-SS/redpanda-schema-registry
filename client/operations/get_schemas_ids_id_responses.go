// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"redpanda-schema-registry/models"
)

// GetSchemasIdsIDReader is a Reader for the GetSchemasIdsID structure.
type GetSchemasIdsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchemasIdsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchemasIdsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSchemasIdsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSchemasIdsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /schemas/ids/{id}] get_schemas_ids_id", response, response.Code())
	}
}

// NewGetSchemasIdsIDOK creates a GetSchemasIdsIDOK with default headers values
func NewGetSchemasIdsIDOK() *GetSchemasIdsIDOK {
	return &GetSchemasIdsIDOK{}
}

/*
GetSchemasIdsIDOK describes a response with status code 200, with default header values.

OK
*/
type GetSchemasIdsIDOK struct {
	Payload *GetSchemasIdsIDOKBody
}

// IsSuccess returns true when this get schemas ids Id o k response has a 2xx status code
func (o *GetSchemasIdsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get schemas ids Id o k response has a 3xx status code
func (o *GetSchemasIdsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schemas ids Id o k response has a 4xx status code
func (o *GetSchemasIdsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schemas ids Id o k response has a 5xx status code
func (o *GetSchemasIdsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get schemas ids Id o k response a status code equal to that given
func (o *GetSchemasIdsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get schemas ids Id o k response
func (o *GetSchemasIdsIDOK) Code() int {
	return 200
}

func (o *GetSchemasIdsIDOK) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemasIdsIdOK  %+v", 200, o.Payload)
}

func (o *GetSchemasIdsIDOK) String() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemasIdsIdOK  %+v", 200, o.Payload)
}

func (o *GetSchemasIdsIDOK) GetPayload() *GetSchemasIdsIDOKBody {
	return o.Payload
}

func (o *GetSchemasIdsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSchemasIdsIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemasIdsIDNotFound creates a GetSchemasIdsIDNotFound with default headers values
func NewGetSchemasIdsIDNotFound() *GetSchemasIdsIDNotFound {
	return &GetSchemasIdsIDNotFound{}
}

/*
GetSchemasIdsIDNotFound describes a response with status code 404, with default header values.

Schema not found
*/
type GetSchemasIdsIDNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get schemas ids Id not found response has a 2xx status code
func (o *GetSchemasIdsIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schemas ids Id not found response has a 3xx status code
func (o *GetSchemasIdsIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schemas ids Id not found response has a 4xx status code
func (o *GetSchemasIdsIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schemas ids Id not found response has a 5xx status code
func (o *GetSchemasIdsIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get schemas ids Id not found response a status code equal to that given
func (o *GetSchemasIdsIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get schemas ids Id not found response
func (o *GetSchemasIdsIDNotFound) Code() int {
	return 404
}

func (o *GetSchemasIdsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemasIdsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetSchemasIdsIDNotFound) String() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemasIdsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetSchemasIdsIDNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSchemasIdsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemasIdsIDInternalServerError creates a GetSchemasIdsIDInternalServerError with default headers values
func NewGetSchemasIdsIDInternalServerError() *GetSchemasIdsIDInternalServerError {
	return &GetSchemasIdsIDInternalServerError{}
}

/*
GetSchemasIdsIDInternalServerError describes a response with status code 500, with default header values.

Internal Server error
*/
type GetSchemasIdsIDInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get schemas ids Id internal server error response has a 2xx status code
func (o *GetSchemasIdsIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schemas ids Id internal server error response has a 3xx status code
func (o *GetSchemasIdsIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schemas ids Id internal server error response has a 4xx status code
func (o *GetSchemasIdsIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schemas ids Id internal server error response has a 5xx status code
func (o *GetSchemasIdsIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get schemas ids Id internal server error response a status code equal to that given
func (o *GetSchemasIdsIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get schemas ids Id internal server error response
func (o *GetSchemasIdsIDInternalServerError) Code() int {
	return 500
}

func (o *GetSchemasIdsIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemasIdsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSchemasIdsIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemasIdsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSchemasIdsIDInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSchemasIdsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetSchemasIdsIDOKBody get schemas ids ID o k body
swagger:model GetSchemasIdsIDOKBody
*/
type GetSchemasIdsIDOKBody struct {

	// schema
	Schema string `json:"schema,omitempty"`

	// schema type
	SchemaType string `json:"schemaType,omitempty"`
}

// Validate validates this get schemas ids ID o k body
func (o *GetSchemasIdsIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get schemas ids ID o k body based on context it is used
func (o *GetSchemasIdsIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSchemasIdsIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSchemasIdsIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetSchemasIdsIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
