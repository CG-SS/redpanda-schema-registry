// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CG-SS/redpanda-schema-registry/models"
)

// GetSubjectVersionsVersionSchemaReader is a Reader for the GetSubjectVersionsVersionSchema structure.
type GetSubjectVersionsVersionSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubjectVersionsVersionSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubjectVersionsVersionSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubjectVersionsVersionSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetSubjectVersionsVersionSchemaUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubjectVersionsVersionSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /subjects/{subject}/versions/{version}/schema] get_subject_versions_version_schema", response, response.Code())
	}
}

// NewGetSubjectVersionsVersionSchemaOK creates a GetSubjectVersionsVersionSchemaOK with default headers values
func NewGetSubjectVersionsVersionSchemaOK() *GetSubjectVersionsVersionSchemaOK {
	return &GetSubjectVersionsVersionSchemaOK{}
}

/*
GetSubjectVersionsVersionSchemaOK describes a response with status code 200, with default header values.

OK
*/
type GetSubjectVersionsVersionSchemaOK struct {
	Payload string
}

// IsSuccess returns true when this get subject versions version schema o k response has a 2xx status code
func (o *GetSubjectVersionsVersionSchemaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get subject versions version schema o k response has a 3xx status code
func (o *GetSubjectVersionsVersionSchemaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version schema o k response has a 4xx status code
func (o *GetSubjectVersionsVersionSchemaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject versions version schema o k response has a 5xx status code
func (o *GetSubjectVersionsVersionSchemaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version schema o k response a status code equal to that given
func (o *GetSubjectVersionsVersionSchemaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get subject versions version schema o k response
func (o *GetSubjectVersionsVersionSchemaOK) Code() int {
	return 200
}

func (o *GetSubjectVersionsVersionSchemaOK) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaOK  %+v", 200, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaOK) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaOK  %+v", 200, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaOK) GetPayload() string {
	return o.Payload
}

func (o *GetSubjectVersionsVersionSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionSchemaNotFound creates a GetSubjectVersionsVersionSchemaNotFound with default headers values
func NewGetSubjectVersionsVersionSchemaNotFound() *GetSubjectVersionsVersionSchemaNotFound {
	return &GetSubjectVersionsVersionSchemaNotFound{}
}

/*
GetSubjectVersionsVersionSchemaNotFound describes a response with status code 404, with default header values.

Schema not found
*/
type GetSubjectVersionsVersionSchemaNotFound struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version schema not found response has a 2xx status code
func (o *GetSubjectVersionsVersionSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version schema not found response has a 3xx status code
func (o *GetSubjectVersionsVersionSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version schema not found response has a 4xx status code
func (o *GetSubjectVersionsVersionSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject versions version schema not found response has a 5xx status code
func (o *GetSubjectVersionsVersionSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version schema not found response a status code equal to that given
func (o *GetSubjectVersionsVersionSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get subject versions version schema not found response
func (o *GetSubjectVersionsVersionSchemaNotFound) Code() int {
	return 404
}

func (o *GetSubjectVersionsVersionSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaNotFound  %+v", 404, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaNotFound) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaNotFound  %+v", 404, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaNotFound) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionSchemaUnprocessableEntity creates a GetSubjectVersionsVersionSchemaUnprocessableEntity with default headers values
func NewGetSubjectVersionsVersionSchemaUnprocessableEntity() *GetSubjectVersionsVersionSchemaUnprocessableEntity {
	return &GetSubjectVersionsVersionSchemaUnprocessableEntity{}
}

/*
GetSubjectVersionsVersionSchemaUnprocessableEntity describes a response with status code 422, with default header values.

Invalid version
*/
type GetSubjectVersionsVersionSchemaUnprocessableEntity struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version schema unprocessable entity response has a 2xx status code
func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version schema unprocessable entity response has a 3xx status code
func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version schema unprocessable entity response has a 4xx status code
func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subject versions version schema unprocessable entity response has a 5xx status code
func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get subject versions version schema unprocessable entity response a status code equal to that given
func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get subject versions version schema unprocessable entity response
func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) Code() int {
	return 422
}

func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionSchemaUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectVersionsVersionSchemaInternalServerError creates a GetSubjectVersionsVersionSchemaInternalServerError with default headers values
func NewGetSubjectVersionsVersionSchemaInternalServerError() *GetSubjectVersionsVersionSchemaInternalServerError {
	return &GetSubjectVersionsVersionSchemaInternalServerError{}
}

/*
GetSubjectVersionsVersionSchemaInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSubjectVersionsVersionSchemaInternalServerError struct {
	Payload *models.ErrorBody
}

// IsSuccess returns true when this get subject versions version schema internal server error response has a 2xx status code
func (o *GetSubjectVersionsVersionSchemaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subject versions version schema internal server error response has a 3xx status code
func (o *GetSubjectVersionsVersionSchemaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subject versions version schema internal server error response has a 4xx status code
func (o *GetSubjectVersionsVersionSchemaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subject versions version schema internal server error response has a 5xx status code
func (o *GetSubjectVersionsVersionSchemaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get subject versions version schema internal server error response a status code equal to that given
func (o *GetSubjectVersionsVersionSchemaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get subject versions version schema internal server error response
func (o *GetSubjectVersionsVersionSchemaInternalServerError) Code() int {
	return 500
}

func (o *GetSubjectVersionsVersionSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaInternalServerError) String() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/schema][%d] getSubjectVersionsVersionSchemaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubjectVersionsVersionSchemaInternalServerError) GetPayload() *models.ErrorBody {
	return o.Payload
}

func (o *GetSubjectVersionsVersionSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
